@page "/notificaciones"
@using DTOs
@using Interfaz.ServiciosInterfaz
@using Servicios.Gestores
@inject GestorUsuarios GestorUsuarios;
@inject LogicaSesion Sesion
@inject NavigationManager Navigator
@rendermode InteractiveServer

@if(Sesion.UsuarioLogueado == null || !sesionCargada)
{
}
else
{
    <h3 class="text-center mt-4 text-primary-emphasis">Notificaciones</h3>

    @if (Sesion.UsuarioLogueado.Notificaciones.Count == 0)
    {
        <p class="text-center text-muted mt-4">No tiene notificaciones pendientes.</p>
    }
    else
    {
        <div class="container mt-3">
            @foreach (NotificacionDTO notificacion in Sesion.UsuarioLogueado.Notificaciones
                     .OrderByDescending(n => n.Fecha).ToList())
            {
                <div class="card shadow-sm mb-3">
                    <div class="card-body d-flex justify-content-between align-items-start">
                        <div>
                            <p class="card-text mb-1">@notificacion.Mensaje</p>
                            <small class="text-muted">
                                 <i class="bi bi-calendar"></i> @notificacion.Fecha.ToString("dd/MM/yyyy")
                            </small>
                        </div>
                        <button class="btn-close ms-3 mt-1"
                                @onclick="@(() => EliminarNotificacion(notificacion.Id))"
                                title="Eliminar notificaciÃ³n"></button>
                    </div>
                </div>
            }
        </div>
    }
}

@code {
    private bool sesionCargada = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !sesionCargada)
        {
            bool haySesionActiva = await Sesion.HaySesionActiva();

            if (!haySesionActiva)
            {
                Navigator.NavigateTo("/");
            }
            else
            {
                await Sesion.ActualizarSesion();
                sesionCargada = true;
                StateHasChanged(); 
            }
        }
    }

    private async Task EliminarNotificacion(int id)
    {
        GestorUsuarios.BorrarNotificacion(Sesion.UsuarioLogueado.Id, id);
        await Sesion.ActualizarSesion(); 
        StateHasChanged(); 
    }
}
