@page "/notificaciones"
@using Dominio
@using Interfaz.ServiciosInterfaz
@inject LogicaSesion Sesion
@inject NavigationManager Navigator
@rendermode InteractiveServer

@if(Sesion.UsuarioLogueado == null || !sesionCargada)
{
}
else
{
    <h3 class="text-center mt-4" style="color: #252323;">Notificaciones</h3>

    @if (Sesion.UsuarioLogueado.Notificaciones.Count == 0)
    {
        <p class="text-center mt-4" style="color: #70798C;">No tenés notificaciones pendientes.</p>
    }
    else
    {
        <div class="container mt-3">
            @foreach (Notificacion notificacion in Sesion.UsuarioLogueado.Notificaciones
                          .OrderByDescending(n => n.Fecha).ToList())
            {
                <div class="card shadow-sm mb-3" style="background-color: #F5F1ED; border-left: 5px solid #A99985;">
                    <div class="card-body d-flex justify-content-between align-items-start">
                        <div>
                            <p class="mb-1" style="color: #252323;">@notificacion.Mensaje</p>
                            <small style="color: #70798C;">
                                <i class="bi bi-calendar-event me-1"></i>@notificacion.Fecha.ToString("dd/MM/yyyy")
                            </small>
                        </div>
                        <button class="btn-close ms-3 mt-1"
                                @onclick="@(() => EliminarNotificacion(notificacion.Id))"
                                title="Eliminar notificación"></button>
                    </div>
                </div>
            }
        </div>
    }

}

@code {
    private bool sesionCargada = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !sesionCargada)
        {
            bool haySesionActiva = await Sesion.HaySesionActiva();

            if (!haySesionActiva)
            {
                Navigator.NavigateTo("/");
            }
            else
            {
                await Sesion.ActualizarSesion();
                sesionCargada = true;
                StateHasChanged(); // Re-renderiza para mostrar sesión activa
            }
        }
    }

    private void EliminarNotificacion(int id)
    {
        Sesion.UsuarioLogueado.BorrarNotificacion(id);
        StateHasChanged(); // Re-renderiza para actualizar la lista
    }
}
