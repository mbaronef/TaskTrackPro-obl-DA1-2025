@page "/notificaciones"
@using Dominio
@using Interfaz.ServiciosInterfaz
@inject LogicaSesion Sesion
@rendermode InteractiveServer
@inject NavigationManager Navigator

@if(Sesion.UsuarioLogueado == null || !sesionCargada)
{
}
else
{
    <h3>Notificaciones</h3>

    @if (Sesion.UsuarioLogueado.Notificaciones.Count == 0)
    {
        <p>No tiene notificaciones pendientes.</p>
    }
    else
    {
        @foreach (Notificacion notificacion in Sesion.UsuarioLogueado.Notificaciones.ToList())
        {
            <div class="alert alert-info d-flex justify-content-between align-items-center">
                <span>@notificacion.Mensaje</span>
                <button class="btn-close" @onclick="@(() => Sesion.UsuarioLogueado.BorrarNotificacion(notificacion.Id))" title="Eliminar notificación"></button>
            </div>
        }
    }
}

@code {
    private bool sesionCargada = false;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !sesionCargada)
        {
            bool haySesionActiva = await Sesion.HaySesionActiva();

            if (!haySesionActiva)
            {
                Navigator.NavigateTo("/");
            }
            else
            {
                Sesion.ActualizarSesion();
                sesionCargada = true;
                StateHasChanged(); // Vuelve a renderizar para mostrar la sesión activa
            }
        }
    }
}