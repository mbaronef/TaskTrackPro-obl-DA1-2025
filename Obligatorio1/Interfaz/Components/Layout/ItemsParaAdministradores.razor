@using Interfaz.ServiciosInterfaz
@using Servicios.Gestores
@inject LogicaSesion Sesion
@inject NavigationManager Navigation
@inject GestorProyectos GestorProyectos
@rendermode InteractiveServer
@implements IDisposable


@if (Sesion.UsuarioLogueado is not null)
{
    @if (Sesion.EsAdminSistema())
    {
        <NavLink href="/usuarios" class="nav-link link-sidebar">Usuarios</NavLink>
    }
    @if (Sesion.EsAdminProyecto() && !Sesion.UsuarioLogueado.EstaAdministrandoUnProyecto)
    {
        <NavLink href="/crear-proyecto" class="nav-link link-sidebar">Crear proyecto</NavLink>
    }
}
<style>
    .link-sidebar {
        color: #f5f1ed;
        margin-bottom: 0.5rem;
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        display: block;
        text-decoration: none;
        transition: background-color 0.2s ease-in-out;
    }

    .link-sidebar:hover,
    .link-sidebar.active {
        background-color: #70798c;
        color: #f5f1ed;
        text-decoration: none;
    }
</style>

@code {
    private bool sesionCargada = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !sesionCargada)
        {
            bool haySesionActiva = await Sesion.HaySesionActiva();

            if (!haySesionActiva)
            {
                Navigation.NavigateTo("/");
            }
            else
            {
                await Sesion.ActualizarSesion();
                sesionCargada = true;
                StateHasChanged(); // Vuelve a renderizar para mostrar la sesi√≥n activa
            }
        }
    }
    
    protected override void OnInitialized()
    {
        Sesion.SesionModificada += RefrescarLayout;
    }

    private void RefrescarLayout()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        Sesion.SesionModificada -= RefrescarLayout;
    }
}