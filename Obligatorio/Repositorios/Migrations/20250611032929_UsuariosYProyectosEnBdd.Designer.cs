// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorios;

#nullable disable

namespace Repositorios.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20250611032929_UsuariosYProyectosEnBdd")]
    partial class UsuariosYProyectosEnBdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dominio.Dependencia", b =>
                {
                    b.Property<int>("TareaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TareaId", "Tipo");

                    b.ToTable("Dependencia");
                });

            modelBuilder.Entity("Dominio.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Notificacion");
                });

            modelBuilder.Entity("Dominio.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinMasTemprana")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("Dominio.Recurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadDeTareasUsandolo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProyectoAsociadoId")
                        .HasColumnType("int");

                    b.Property<int?>("TareaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoAsociadoId");

                    b.HasIndex("TareaId");

                    b.ToTable("Recursos");
                });

            modelBuilder.Entity("Dominio.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracionEnDias")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeEjecucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinMasTemprana")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicioMasTemprana")
                        .HasColumnType("datetime2");

                    b.Property<int>("Holgura")
                        .HasColumnType("int");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.ToTable("Tarea");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadProyectosAsignados")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdministradorProyecto")
                        .HasColumnType("bit");

                    b.Property<bool>("EsAdministradorSistema")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaAdministrandoUnProyecto")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProyectoId")
                        .HasColumnType("int");

                    b.Property<int?>("TareaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("TareaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Dominio.Dependencia", b =>
                {
                    b.HasOne("Dominio.Tarea", "Tarea")
                        .WithMany("Dependencias")
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("Dominio.Notificacion", b =>
                {
                    b.HasOne("Dominio.Usuario", null)
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Dominio.Proyecto", b =>
                {
                    b.HasOne("Dominio.Usuario", "Administrador")
                        .WithMany()
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("Dominio.Recurso", b =>
                {
                    b.HasOne("Dominio.Proyecto", "ProyectoAsociado")
                        .WithMany()
                        .HasForeignKey("ProyectoAsociadoId");

                    b.HasOne("Dominio.Tarea", null)
                        .WithMany("RecursosNecesarios")
                        .HasForeignKey("TareaId");

                    b.Navigation("ProyectoAsociado");
                });

            modelBuilder.Entity("Dominio.Tarea", b =>
                {
                    b.HasOne("Dominio.Proyecto", null)
                        .WithMany("Tareas")
                        .HasForeignKey("ProyectoId");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.HasOne("Dominio.Proyecto", null)
                        .WithMany("Miembros")
                        .HasForeignKey("ProyectoId");

                    b.HasOne("Dominio.Tarea", null)
                        .WithMany("UsuariosAsignados")
                        .HasForeignKey("TareaId");
                });

            modelBuilder.Entity("Dominio.Proyecto", b =>
                {
                    b.Navigation("Miembros");

                    b.Navigation("Tareas");
                });

            modelBuilder.Entity("Dominio.Tarea", b =>
                {
                    b.Navigation("Dependencias");

                    b.Navigation("RecursosNecesarios");

                    b.Navigation("UsuariosAsignados");
                });

            modelBuilder.Entity("Dominio.Usuario", b =>
                {
                    b.Navigation("Notificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
